<?php
/**
 * Akismet integrator API for Zikula
 *
 * @author Mark West
 * @link http://www.markwest.me.uk
 * @license GNU/GPL - http://www.gnu.org/copyleft/gpl.html
 */

class Akismet_Controller_Admin extends Zikula_Controller
{
    /**
     * Adminstration entry point
     *
     * @return string HTML output string
     */
    public function main()
    {
        // security check
        if (!SecurityUtil::checkPermission('Akismet::', '::', ACCESS_ADMIN)) {
            return LogUtil::registerPermissionError();
        }

        // Create output object
        $this->view->setCaching(false);

        // Return the output that has been generated by this function
        return $this->view->fetch('akismet_admin_main.htm');
    }

    /**
     * Modify module configuration
     *
     * @return string HTML output string
     */
    public function modifyconfig()
    {
        // security check
        if (!SecurityUtil::checkPermission('Akismet::', '::', ACCESS_ADMIN)) {
            return LogUtil::registerPermissionError();
        }

        $this->view->setCaching(false);
        // assign all module vars
        $this->view->assign($this->getVars());

        // Return the output that has been generated by this function
        return $this->view->fetch('akismet_admin_modifyconfig.htm');
    }

    /**
     * Update module configuration
     *
     * @author Mark West
     * @return mixed error string or true
     */
    public function updateconfig()
    {
        if (!SecurityUtil::checkPermission('Akismet::', '::', ACCESS_ADMIN)) {
            return LogUtil::registerPermissionError();
        }

        // Confirm authorisation code
        if (!SecurityUtil::confirmAuthKey()) {
            return LogUtil::registerAuthidError(ModUtil::url('BadBehaviour', 'admin'));
        }

        // get our input
        $enable = (bool)FormUtil::getPassedValue('enable', false, 'POST');
        $apikey = (string)FormUtil::getPassedValue('apikey', '', 'POST');

        // validate the key
        if (!ModUtil::apiFunc('akismet', 'user', 'verifykey', array('apikey' => $apikey))) {
            LogUtil::registerError($this->__('Error! Sorry! Invalid API key. Please obtain one from http://wordpress.com/api-keys/.'));
            $this->setVar('apikeyvalid', false);
            return System::redirect(ModUtil::url('akismet', 'admin'));
        } else {
            $this->setVar('apikeyvalid', true);
        }

        // set our new values
        $this->setVar('enable', $enable);
        $this->setVar('apikey', $apikey);

        // the module configuration has been updated successfuly
        LogUtil::registerStatus($this->__('Done! Module configuration updated.'));

        // Let any other modules know that the modules configuration has been updated
        $this->callHooks('module', 'updateconfig', 'akismet', array('module' => 'akismet'));

        return System::redirect(ModUtil::url('akismet', 'admin'));
    }

}